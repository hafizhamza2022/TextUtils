{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","togleMode","htmlFor","style","backgroundColor","border","margin","borderRadius","width","height","cursor","brownMode","TextForm","useState","text","setText","heading","rows","value","onChange","event","target","newText","toLocaleLowerCase","split","length","defaultProps","aboutText","App","brown","updateBrown","setDarkMode","setAlert","showAlert","message","setTimeout","document","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3a401eb5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.togleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            style={{\r\n              backgroundColor: \"#cd6133\",\r\n              border: \"none\",\r\n              margin: \"0 10px\",\r\n              borderRadius: \"5px\",\r\n              width: \"40px\",\r\n              height: \"40px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={props.brownMode}\r\n          />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set TitleHere\",\r\n  aboutText: \"About Us\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleUpLowerClick = () => {\r\n    let newText = text.toLocaleLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const handeOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container my-3\">\r\n        <h1\r\n          className={`text-center text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n        >\r\n          {props.heading}\r\n        </h1>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8 col-12\">\r\n            <textarea\r\n              id=\"myBox\"\r\n              className=\"form-control my-3\"\r\n              rows=\"5\"\r\n              value={text}\r\n              onChange={handeOnChange}\r\n            ></textarea>\r\n            <button\r\n              className=\"btn btn-primary my-3 mx-2\"\r\n              onClick={handleUpClick}\r\n            >\r\n              Convert to Uppercase\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary my-3 mx-2\"\r\n              onClick={handleUpLowerClick}\r\n            >\r\n              Convert to Lowercase\r\n            </button>\r\n\r\n            <button\r\n              className=\"btn btn-primary my-3 mx-2\"\r\n              onClick={handleRemove}\r\n            >\r\n              Remove Text\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n            <h1\r\n              className={`text-${props.mode === \"light\" ? \"#1e2c7e\" : \"light\"}`}\r\n            >\r\n              Your text summary\r\n            </h1>\r\n            <p\r\n              className={`text-${\r\n                props.mode === \"light\" ? \"#1e2c7ek\" : \"light\"\r\n              }`}\r\n            >\r\n              {text.split(\" \").length - 1} words and {text.length} characters{\" \"}\r\n            </p>\r\n\r\n            <h3\r\n              className={`text-${props.mode === \"light\" ? \"#1e2c7e\" : \"light\"}`}\r\n            >\r\n              Preview\r\n            </h3>\r\n            <p\r\n              className={`text-${props.mode === \"light\" ? \"#1e2c7e\" : \"light\"}`}\r\n            >\r\n              {text.length > 0 ? text : \"Enter something to preview it here\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// let name = \"Hamza\";\nfunction App() {\n  const [brown, updateBrown] = useState(\"light\");\n  const [mode, setDarkMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const brownMode = () => {\n    if (brown === \"light\") {\n      updateBrown(\"#cd6133\");\n      document.body.style.background = \"#cd6133\";\n    } else {\n      updateBrown(\"light\");\n      document.body.style.background = \"white\";\n    }\n  };\n  const togleMode = () => {\n    if (mode === \"light\") {\n      setDarkMode(\"dark\");\n      document.body.style.backgroundColor = \"#1e2c7e\";\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n      document.title = \"Text Utils - Dark Mode\";\n    } else {\n      setDarkMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Has Been Enabled\", \"success\");\n      document.title = \"Text Utils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* // <Router> */}\n      {/* <Navbar /> */}\n      <Navbar\n        title=\"Text Utils\"\n        mode={mode}\n        togleMode={togleMode}\n        brownMode={brownMode}\n      />\n      <Alert alert={alert} />\n      {/* <Switch> */}\n      {/* <Route exact path=\"/about\"> */}\n      {/* <About /> */}\n      {/* </Route> */}\n      {/* <Route path=\"/\"> */}\n      <TextForm heading=\"Enter the Text to Analyze Below\" mode={mode} />\n      {/* </Route> */}\n      {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}